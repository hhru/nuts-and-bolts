-   name: 12.0.0.jakarta-rc2
    date: '2025-03-26T14:00:00.000000+03:00'
    description: "
        * Добавлена настройка `nab.datasource.executeOnDataSource.skip`, позволяющая отключать работу аннотации `@ExecuteOnDataSource`.
        * Бин `DataSourceContextTransactionManager defaultJdbcTransactionManager` перемещён из конфига `NabDataSourceCommonConfig`
          в отдельный конфиг `NabDataSourceTransactionManagerConfig`."
    instructions: "
        * Из конфига `NabDataSourceCommonConfig` убран бин `DataSourceContextTransactionManager defaultJdbcTransactionManager`,
          теперь он лежит в отдельном конфиге `NabDataSourceTransactionManagerConfig`. Если вам нужен этот TransactionManager,
          подключайте новый конфиг явно. Имейте в виду, что `NabDataSourceTransactionManagerConfig` не совместим
          с конфигами hibernate/jpa (`NabJpaCommonConfig`, `NabJpaProdConfig`, `NabHibernateCommonConfig`, `NabHibernateProdConfig`, `NabHibernateTestBaseConfig`),
          т.к. в них подключается другой TransactionManager.
        * Изменено имя бина `transactionManager` - проверьте, что вы не используете это имя явно (если конечно вы не объявили такой бин в своём сервисе)."
    compatible: false

-   name: 10.1.6.jakarta-rc2
    date: '2025-02-04T15:00:00.000000+03:00'
    description: Фикс бага с типом ServiceSupplier в NabServiceContributor
    instructions: ''
    compatible: true

-   name: 10.0.0.jakarta-rc2
    date: '2024-12-13T11:00:00.000000+03:00'
    description: Из nab-testbase удален postgresql драйвер
    instructions: ''
    compatible: true

-   name: 9.0.0.jakarta-rc3
    date: '2024-11-25T20:15:00.000000+03:00'
    description: В nab-testbase подключен postgresql драйвер
    instructions: ''
    compatible: true

-   name: 9.0.0.jakarta-rc2
    date: '2024-11-25T20:00:00.000000+03:00'
    description: Session бин объявляется в NabHibernateCommonConfig
    instructions: ''
    compatible: true

-   name: 8.0.1.jakarta-rc2
    date: '2024-11-19T20:10:00.000000+03:00'
    description: В JpaTestBase и TransactionTestBase подключается SpringExtensionWithFailFast
    instructions: ''
    compatible: true

-   name: 7.0.0.jakarta-rc2
    date: '2024-10-22T16:15:00.000000+03:00'
    description: "Исправлен баг с инжектом org.hibernate.Session"
    instructions: ""
    compatible: true

-   name: 5.4.0.jakarta-rc2
    date: '2024-09-04T15:20:00.000000+03:00'
    description: "Исправлен дефект записи логов в stdout"
    instructions: ""
    compatible: true

-   name: 4.54.1.jakarta-rc8
    date: '2024-08-05T19:00:00.000000+03:00'
    description: "Исправлены конфиги NabDataSourceCommonConfig и NabJpaCommonConfig таким образом, чтобы в сервисах при необходимости 
        была возможность сконфигурировать несколько бинов Session/EntityManager для работы с разными датасорсами. 
        Добавлена аннотация @EntityManagerFactoryId"
    instructions: "В DataSourceContextTransactionManager добавлен конструктор, который принимает на вход 
        ExecuteOnDataSourceTransactionCallbackFactory. То есть если в сервисе явно создается объект DataSourceContextTransactionManager, 
        то нужно помимо PlatformTransactionManager'а также передавать реализацию ExecuteOnDataSourceTransactionCallbackFactory, 
        иначе будет использоваться DefaultTransactionCallbackFactory. Также при объявлении бина в качестве возвращаемого типа необходимо 
        указывать именно DataSourceContextTransactionManager, а не PlatformTransactionManager (transactionManager'ы, объявленные как 
        PlatformTransactionManager, не будут инжектиться в ExecuteOnDataSourceAspect). 
        При явном объявлении бина LocalContainerEntityManagerFactoryBean в своем коде необходимо повесить на него аннотацию @EntityManagerFactoryId"
    compatible: false

-   name: 4.54.1.jakarta-rc7
    date: '2024-07-18T13:00:00.000000+03:00'
    description: "Удалено сканирование сущностей из кода наба, вместо этого добавлен NabPersistenceUnitPostProcessor"
    instructions: ""
    compatible: true

-   name: 4.54.1.jakarta-rc6
    date: '2024-07-15T15:30:00.000000+03:00'
    description: "В NabDataSourceCommonConfig добавлен бин defaultJdbcTransactionManager"
    instructions: "Если в вашем сервисе импортится NabDataSourceCommonConfig, и вы самостоятельно описываете бин PlatformTransactionManager 
        в @Configuration классе, тогда нужно либо выпилить это писание, чтобы везде инжектился бин из NabDataSourceCommonConfig'а, либо
        проставить аннотации @Primary/@Qualifier"
    compatible: false

-   name: 4.54.1.jakarta-rc5
    date: '2024-07-10T14:30:00.000000+03:00'
    description: "Выполнен рефакторинг:
        1. Логика по маршрутизации запросов в различные датасорсы переехала из модуля nab-hibernate в модуль nab-data-source. 
           Таким образом, при необходимости ее использовать необязательно тянуть в сервис hibernate 
        2. Из модуля nab-data-source удалена зависимость org.postgresql:postgresql
        3. Удален интерфейс DataSourceProxyFactory, вместо него добавлен JdbcExtension
           Удален метод RoutingDataSource.setProxyFactory, вместо него добавлен RoutingDataSource.setJdbcExtension
        4. Из DataSourceContextTransactionManager удален entityManagerProxy
        5. В nab-testbase добавлен HibernateTestBase"
    instructions: "
        1. Сбилдить проект и поправить импорты
        2. Добавить в помник сервиса необходимый JDBC Driver. Например, если сервис работает с postgresql, нужно добавить
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
            </dependency>
        3. Вместо DataSourceProxyFactory необходимо использовать JdbcExtension
        4. Вместо вызова метода RoutingDataSource.setProxyFactory необходимо вызывать RoutingDataSource.setJdbcExtension"
    compatible: false

-   name: 4.54.1.jakarta-rc4
    date: '2024-07-04T12:25:00.000000+03:00'
    description: "Обновление kafka-client-utils до 1.3.jakarta-rc1, timing-logger до 1.2.6.jakarta-rc1"
    instructions: ""
    compatible: true

-   name: 4.54.1.jakarta-rc3
    date: '2024-06-21T14:15:00.000000+03:00'
    description: "Модуль nab-hibernate-persistence-provider переименован в nab-hibernate"
    instructions: "Поправить помник - вместо nab-hibernate-persistence-provider необходимо подключать nab-hibernate"
    compatible: false

-   name: 4.54.1.jakarta-rc2
    date: '2024-06-21T10:20:00.000000+03:00'
    description: "Исправлена ошибка, возникающая при использовании hibernate @converter'ов (в nab-hibernate ушли от 
        использования классов из пакета org.springframework.orm.hibernate5, так как не все они имеют совместимость с hibernate 6).
        Модуль nab-hibernate переименован в nab-hibernate-persistence-provider. Для использования hibernate достаточно подключить 
        в сервисе модуль nab-hibernate-persistence-provider и импортировать конфиг NabHibernateProdConfig."
    instructions: "
        1. Поправить помник - вместо nab-hibernate необходимо подключать nab-hibernate-persistence-provider. 
           upd: данный пункт можно скипать, если вы обновляетесь на версию 4.54.1.jakarta-rc3 или новее  
        2. Вместо NabSessionFactoryBean необходимо использовать NabEntityManagerFactoryBean
        3. Вместо SessionFactoryCreationHandler необходимо использовать EntityManagerFactoryCreationHandler 
        4. Для регистрации EventListener'ов необходимо добавить бин EventListenerRegistryConsumer в контекст спринга
        5. Для использования Integrator'ов необходимо реализовать IntegratorProvider и указать имя класса 
           в настройке hibernate.integrator_provider
        6. Вместо SessionFactory необходимо инжектить Session (если в приложении используется хиберовский api) или EntityManager и 
           использовать их для работы с базой, спринг сам создаст инстанс Session'а/EntityManager'а или переиспользует уже 
           существующий в текущей транзакции. 
           Подробнее об этом можно прочитать в документации: 
           https://docs.spring.io/spring-framework/reference/data-access/orm/jpa.html#orm-jpa-dao
           https://docs.spring.io/spring-framework/reference/data-access/orm/jpa.html#orm-jpa-dao-autowired
           Ручная работа с использованием метода SessionFactory.getCurrentSession больше не поддерживается, 
           и вызовы данного метода будут приводить к ошибке
        7. Поправить импорт класса MappingConfig
        8. Поправить импорт ServiceSupplier
        9. Вместо класса HibernateTestBase необходимо использовать JpaTestBase
           upd: данный пункт можно скипать, если вы обновляетесь на версию 4.54.1.jakarta-rc5 или новее И в ваших тестах используется хиберовский api"
    compatible: false
